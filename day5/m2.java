package day5;

public class m2 {
    public static void main(String[] args) {
        // 설명 변수 x를 만듦
        int x;

        // 설명 변수 x에 20이라는 값을 할당
        x = 20;
    }
}
// 문제 : 레퍼런스변수에 값 할당과정 설명

class Main {
    public static void main(String[] args) {
        // 설명 메인 함수가 시작되면 a자동차라는 변수가 스택 영역에 만들어 진다.
        // a자동차 변수는 자동차 타입이기 때문에 자동차 리모컨만 들어올 수 있다.
        // 현재는 아무 값도 넣지 않았기 때문에 비어있다고 볼 수 있다.
        자동차 a자동차;

        // 설명 new 자동차()를 하면 힙에 자동차 클래스를 본 딴 객체가 힙에 만들어진다.
        // 그와 동시에 객체를 조종할 수 있는 (연결되어있는) 리모컨도 함께 만들어진다.
        // 리모컨은 스택에 저장할 수 있기 때문에 a자동차 변수에 저장한다.
        a자동차 = new 자동차();

        // 설명
        // a자동차에 있는 리모컨을 이용해서 연결된 자동차에 명령을 내린다.
        // 연결된 객체 (자동차)가 작동한다.
        a자동차.달리다(); // a자동차 객체의 달리다 메서드를 호출

        // 모든 객체들은 서로를 평생 볼 수 없다.
        // 모든 객체들은 서로를 원격조종한다.
    }
}

// 자동차 설계도!, 절대 자동차가 아니다.!!!
class 자동차 {
    // 이 메서드(함수)의 2가지 용도
    // - ???
    // - ???
    void 달리다() {
        System.out.println("자동차가 달립니다.");
    }
}
// 문제 : 레퍼런스변수에 값 할당과정 설명

// 과정설명
// ...

class Main2 {
    // 메인 함수
    public static void main(String[] args) {
        // 설명
        자동차 a자동차;

        // 설명
        a자동차 = new 자동차();

        // 설명
        a자동차.달리다();
    }
}

// class => 설계도, 틀(객체를 만들기 위한)
class 자동차2 {
    // 달리다 함수/메서드의 의미 설명
    void 달리다() {
        System.out.println("자동차가 달립니다.");
    }
}
